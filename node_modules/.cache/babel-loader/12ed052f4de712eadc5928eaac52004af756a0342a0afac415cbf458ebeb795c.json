{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeList = ({\n  numJokesToGet = 5\n}) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [changeJokeOrder, setChangeJokeOrder] = useState(false);\n  const [sortedStorage, setSortedStorage] = useState([]);\n  const generateNewJokes = useCallback(() => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n    setChangeJokeOrder(false);\n  }, []);\n  const displayJokesOnUI = () => {\n    return jokes.map(j => {\n      const data = {\n        id: j.id,\n        votes: 0,\n        text: j.joke,\n        key: j.id\n      };\n      localStorage.setItem(`${j.id}`, JSON.stringify(data));\n      return /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        updateLocalStorageOnVote: updateLocalStorageOnVote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 15\n      }, this);\n    });\n  };\n  const displayNewOrderdJokesOnUI = () => {\n    console.log(\"FIRING\");\n    // const storage = Object.values(localStorage);\n    //   const filterdStorage = storage.filter(j => j !== \"INFO\");\n    //   const loopedStorage = filterdStorage.map((j) => {\n    //       return JSON.parse(j);\n    //   })\n    //   const mySortedStorage = loopedStorage.sort((a, b) => b.votes - a.votes);\n    //   setSortedStorage(mySortedStorage);\n    // console.log(sortedStorage, 'sortedStorage')\n    console.log(sortedStorage, 'sortedStorage in displayJokes');\n    return sortedStorage.map(j => {\n      return /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.text,\n        id: j.id,\n        updateLocalStorageOnVote: updateLocalStorageOnVote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this);\n    });\n  };\n  useEffect(() => {\n    const getJokes = async () => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...joke\n          } = res.data;\n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({\n              ...joke\n            });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getJokes();\n  }, [generateNewJokes, jokes, numJokesToGet]);\n  const updateLocalStorageOnVote = useCallback((id, votes, text, key) => {\n    const data = {\n      id: id,\n      votes: votes,\n      text: text,\n      key: key\n    };\n    localStorage.setItem(`${id}`, JSON.stringify(data));\n    setChangeJokeOrder(true);\n  }, []);\n  const changeSomething = () => {\n    setSortedStorage([]);\n    console.log(sortedStorage, 'sortedStorage in changeSomething');\n    const storage = Object.values(localStorage);\n    const filterdStorage = storage.filter(j => j !== \"INFO\");\n    const loopedStorage = filterdStorage.map(j => {\n      return JSON.parse(j);\n    });\n    const mySortedStorage = loopedStorage.sort((a, b) => b.votes - a.votes);\n    console.log(mySortedStorage, 'mySortedStorage');\n    setSortedStorage(mySortedStorage);\n  };\n  useEffect(() => {\n    console.log(\"RENDERING USEEFFECT\");\n    changeSomething();\n    // const updateSortedStorage = () => {\n    //   const storage = Object.values(localStorage);\n    //   const filterdStorage = storage.filter(j => j !== \"INFO\");\n    //   const loopedStorage = filterdStorage.map((j) => {\n    //       return JSON.parse(j);\n    //   })\n    //   const mySortedStorage = loopedStorage.sort((a, b) => b.votes - a.votes);\n    //   setSortedStorage(mySortedStorage);\n    // }\n    // updateSortedStorage();\n  }, [updateLocalStorageOnVote, changeSomething]);\n  const showLoadingSpinner = () => {\n    if (isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-4x fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: generateNewJokes,\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showLoadingSpinner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 9\n    }, this), changeJokeOrder === false ? displayJokesOnUI() : displayNewOrderdJokesOnUI()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 131,\n    columnNumber: 7\n  }, this);\n};\n_s(JokeList, \"cF2ZDWloO9pW+URnUUCB/ayDtW8=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","useCallback","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","changeJokeOrder","setChangeJokeOrder","sortedStorage","setSortedStorage","generateNewJokes","localStorage","clear","displayJokesOnUI","map","j","data","id","votes","text","joke","key","setItem","JSON","stringify","updateLocalStorageOnVote","fileName","_jsxFileName","lineNumber","columnNumber","displayNewOrderdJokesOnUI","console","log","getJokes","seenJokes","Set","length","res","get","headers","Accept","has","add","push","err","error","changeSomething","storage","Object","values","filterdStorage","filter","loopedStorage","parse","mySortedStorage","sort","a","b","showLoadingSpinner","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nconst JokeList = ({numJokesToGet = 5}) => {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [changeJokeOrder, setChangeJokeOrder] = useState(false);\n  const [sortedStorage, setSortedStorage] = useState([]);\n\n  const generateNewJokes = useCallback(() => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n    setChangeJokeOrder(false);\n  }, []);\n\n  const displayJokesOnUI = () => {\n      return (\n          jokes.map((j) => {\n            const data = {id: j.id, votes: 0, text: j.joke, key: j.id};\n            localStorage.setItem(`${j.id}`, JSON.stringify(data));\n          return (\n              <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            updateLocalStorageOnVote={updateLocalStorageOnVote}\n          />\n          )})\n        )\n  }\n\n  const displayNewOrderdJokesOnUI = () => {\n    console.log(\"FIRING\")\n    // const storage = Object.values(localStorage);\n    //   const filterdStorage = storage.filter(j => j !== \"INFO\");\n    //   const loopedStorage = filterdStorage.map((j) => {\n    //       return JSON.parse(j);\n    //   })\n    //   const mySortedStorage = loopedStorage.sort((a, b) => b.votes - a.votes);\n    //   setSortedStorage(mySortedStorage);\n    // console.log(sortedStorage, 'sortedStorage')\n   console.log(sortedStorage, 'sortedStorage in displayJokes')\n     \n    return (\n      sortedStorage.map((j) => {\n      return (\n          <Joke\n        text={j.text}\n        key={j.id}\n        id={j.id}\n        updateLocalStorageOnVote={updateLocalStorageOnVote}\n      />\n      )})\n    )\n  }\n\n  useEffect(() => {\n    const getJokes = async() => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { ...joke } = res.data;\n  \n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({ ...joke });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getJokes();\n  }, [generateNewJokes, jokes, numJokesToGet])\n\n  const updateLocalStorageOnVote = useCallback((id, votes, text, key) => {\n    const data = {id: id, votes: votes, text: text, key: key};\n    localStorage.setItem(`${id}`, JSON.stringify(data));\n    setChangeJokeOrder(true);\n}, []);\n\nconst changeSomething = () => {\n  setSortedStorage([]);\n  console.log(sortedStorage, 'sortedStorage in changeSomething')\n  const storage = Object.values(localStorage);\n  const filterdStorage = storage.filter(j => j !== \"INFO\");\n  const loopedStorage = filterdStorage.map((j) => {\n      return JSON.parse(j);\n  })\n  const mySortedStorage = loopedStorage.sort((a, b) => b.votes - a.votes);\n  console.log(mySortedStorage, 'mySortedStorage')\n  setSortedStorage(mySortedStorage);\n};\n\n  useEffect(() => {\n    console.log(\"RENDERING USEEFFECT\")\n    changeSomething();\n    // const updateSortedStorage = () => {\n    //   const storage = Object.values(localStorage);\n    //   const filterdStorage = storage.filter(j => j !== \"INFO\");\n    //   const loopedStorage = filterdStorage.map((j) => {\n    //       return JSON.parse(j);\n    //   })\n    //   const mySortedStorage = loopedStorage.sort((a, b) => b.votes - a.votes);\n    //   setSortedStorage(mySortedStorage);\n    // }\n    // updateSortedStorage();\n  }, [updateLocalStorageOnVote, changeSomething])\n\n  const showLoadingSpinner = () => {\n    if(isLoading === true){\n      return (\n        <div className=\"loading\">\n         <i className=\"fas fa-4x fa-spinner fa-spin\" />\n       </div>\n      )\n    }\n  }\n\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={generateNewJokes}\n        >\n          Get New Jokes\n        </button>\n        <div>\n          {showLoadingSpinner()}\n        </div>\n\n        {changeJokeOrder === false ? displayJokesOnUI() : displayNewOrderdJokesOnUI()}\n        \n      </div>\n    )\n}\n\nexport default JokeList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC/D,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAACC,aAAa,GAAG;AAAC,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGb,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACc,eAAe,EAAEC,kBAAkB,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACgB,aAAa,EAAEC,gBAAgB,CAAC,GAAGjB,QAAQ,CAAC,EAAE,CAAC;EAEtD,MAAMkB,gBAAgB,GAAGhB,WAAW,CAAC,MAAM;IACzCS,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAClBM,YAAY,CAACC,KAAK,CAAC,CAAC;IACpBL,kBAAkB,CAAC,KAAK,CAAC;EAC3B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,gBAAgB,GAAGA,CAAA,KAAM;IAC3B,OACIX,KAAK,CAACY,GAAG,CAAEC,CAAC,IAAK;MACf,MAAMC,IAAI,GAAG;QAACC,EAAE,EAAEF,CAAC,CAACE,EAAE;QAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAEJ,CAAC,CAACK,IAAI;QAAEC,GAAG,EAAEN,CAAC,CAACE;MAAE,CAAC;MAC1DN,YAAY,CAACW,OAAO,CAAC,GAAGP,CAAC,CAACE,EAAE,EAAE,EAAEM,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;MACvD,oBACIlB,OAAA,CAACF,IAAI;QACPuB,IAAI,EAAEJ,CAAC,CAACK,IAAK;QAEbH,EAAE,EAAEF,CAAC,CAACE,EAAG;QACTQ,wBAAwB,EAAEA;MAAyB,GAF9CV,CAAC,CAACE,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CAAC;IACD,CAAC,CAAC;EAEX,CAAC;EAED,MAAMC,yBAAyB,GAAGA,CAAA,KAAM;IACtCC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;IACrB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACDD,OAAO,CAACC,GAAG,CAACxB,aAAa,EAAE,+BAA+B,CAAC;IAE1D,OACEA,aAAa,CAACM,GAAG,CAAEC,CAAC,IAAK;MACzB,oBACIjB,OAAA,CAACF,IAAI;QACPuB,IAAI,EAAEJ,CAAC,CAACI,IAAK;QAEbF,EAAE,EAAEF,CAAC,CAACE,EAAG;QACTQ,wBAAwB,EAAEA;MAAyB,GAF9CV,CAAC,CAACE,EAAE;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAGV,CAAC;IACD,CAAC,CAAC;EAEP,CAAC;EAEDpC,SAAS,CAAC,MAAM;IACd,MAAMwC,QAAQ,GAAG,MAAAA,CAAA,KAAW;MAC1B,IAAI;QACF,IAAIC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;QACzB,OAAOjC,KAAK,CAACkC,MAAM,GAAGpC,aAAa,EAAE;UACnC,IAAIqC,GAAG,GAAG,MAAM1C,KAAK,CAAC2C,GAAG,CAAC,4BAA4B,EAAE;YACtDC,OAAO,EAAE;cAAEC,MAAM,EAAE;YAAmB;UACxC,CAAC,CAAC;UACF,IAAI;YAAE,GAAGpB;UAAK,CAAC,GAAGiB,GAAG,CAACrB,IAAI;UAE1B,IAAI,CAACkB,SAAS,CAACO,GAAG,CAACrB,IAAI,CAACH,EAAE,CAAC,EAAE;YAC3BiB,SAAS,CAACQ,GAAG,CAACtB,IAAI,CAACH,EAAE,CAAC;YACtBf,KAAK,CAACyC,IAAI,CAAC;cAAE,GAAGvB;YAAK,CAAC,CAAC;UACzB,CAAC,MAAM;YACLW,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UACjC;QACF;QACA3B,YAAY,CAAC,KAAK,CAAC;MACrB,CAAC,CAAC,OAAOuC,GAAG,EAAE;QACZb,OAAO,CAACc,KAAK,CAACD,GAAG,CAAC;MACpB;IACF,CAAC;IAEDX,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACvB,gBAAgB,EAAER,KAAK,EAAEF,aAAa,CAAC,CAAC;EAE5C,MAAMyB,wBAAwB,GAAG/B,WAAW,CAAC,CAACuB,EAAE,EAAEC,KAAK,EAAEC,IAAI,EAAEE,GAAG,KAAK;IACrE,MAAML,IAAI,GAAG;MAACC,EAAE,EAAEA,EAAE;MAAEC,KAAK,EAAEA,KAAK;MAAEC,IAAI,EAAEA,IAAI;MAAEE,GAAG,EAAEA;IAAG,CAAC;IACzDV,YAAY,CAACW,OAAO,CAAC,GAAGL,EAAE,EAAE,EAAEM,IAAI,CAACC,SAAS,CAACR,IAAI,CAAC,CAAC;IACnDT,kBAAkB,CAAC,IAAI,CAAC;EAC5B,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMuC,eAAe,GAAGA,CAAA,KAAM;IAC5BrC,gBAAgB,CAAC,EAAE,CAAC;IACpBsB,OAAO,CAACC,GAAG,CAACxB,aAAa,EAAE,kCAAkC,CAAC;IAC9D,MAAMuC,OAAO,GAAGC,MAAM,CAACC,MAAM,CAACtC,YAAY,CAAC;IAC3C,MAAMuC,cAAc,GAAGH,OAAO,CAACI,MAAM,CAACpC,CAAC,IAAIA,CAAC,KAAK,MAAM,CAAC;IACxD,MAAMqC,aAAa,GAAGF,cAAc,CAACpC,GAAG,CAAEC,CAAC,IAAK;MAC5C,OAAOQ,IAAI,CAAC8B,KAAK,CAACtC,CAAC,CAAC;IACxB,CAAC,CAAC;IACF,MAAMuC,eAAe,GAAGF,aAAa,CAACG,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACvC,KAAK,GAAGsC,CAAC,CAACtC,KAAK,CAAC;IACvEa,OAAO,CAACC,GAAG,CAACsB,eAAe,EAAE,iBAAiB,CAAC;IAC/C7C,gBAAgB,CAAC6C,eAAe,CAAC;EACnC,CAAC;EAEC7D,SAAS,CAAC,MAAM;IACdsC,OAAO,CAACC,GAAG,CAAC,qBAAqB,CAAC;IAClCc,eAAe,CAAC,CAAC;IACjB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;EACF,CAAC,EAAE,CAACrB,wBAAwB,EAAEqB,eAAe,CAAC,CAAC;EAE/C,MAAMY,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAGtD,SAAS,KAAK,IAAI,EAAC;MACpB,oBACEN,OAAA;QAAK6D,SAAS,EAAC,SAAS;QAAAC,QAAA,eACvB9D,OAAA;UAAG6D,SAAS,EAAC;QAA8B;UAAAjC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAET;EACF,CAAC;EAEC,oBACE/B,OAAA;IAAK6D,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB9D,OAAA;MACE6D,SAAS,EAAC,kBAAkB;MAC5BE,OAAO,EAAEnD,gBAAiB;MAAAkD,QAAA,EAC3B;IAED;MAAAlC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACT/B,OAAA;MAAA8D,QAAA,EACGF,kBAAkB,CAAC;IAAC;MAAAhC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EAELvB,eAAe,KAAK,KAAK,GAAGO,gBAAgB,CAAC,CAAC,GAAGiB,yBAAyB,CAAC,CAAC;EAAA;IAAAJ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAE1E,CAAC;AAEZ,CAAC;AAAA5B,EAAA,CA5IKF,QAAQ;AAAA+D,EAAA,GAAR/D,QAAQ;AA8Id,eAAeA,QAAQ;AAAC,IAAA+D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}