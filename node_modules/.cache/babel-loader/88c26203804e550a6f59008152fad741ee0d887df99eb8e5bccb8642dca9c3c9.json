{"ast":null,"code":"import React,{useState,useEffect}from\"react\";import axios from\"axios\";import Joke from\"./Joke\";import\"./JokeList.css\";import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const JokeList=_ref=>{let{numJokesToGet=5}=_ref;const[jokes,setJokes]=useState([]);const[isLoading,setIsLoading]=useState(true);// const [voteLeaderboard, setVoteLeaderboard] = useState([]);\nconst generateNewJokes=()=>{setJokes([]);setIsLoading(true);localStorage.clear();};useEffect(()=>{const getJokes=async()=>{try{let seenJokes=new Set();while(jokes.length<numJokesToGet){let res=await axios.get(\"https://icanhazdadjoke.com\",{headers:{Accept:\"application/json\"}});let{...joke}=res.data;if(!seenJokes.has(joke.id)){seenJokes.add(joke.id);jokes.push({...joke});}else{console.log(\"duplicate found!\");}}setIsLoading(false);}catch(err){console.error(err);}};getJokes();},[generateNewJokes]);const showLoadingSpinner=()=>{if(isLoading===true){return/*#__PURE__*/_jsx(\"div\",{className:\"loading\",children:/*#__PURE__*/_jsx(\"i\",{className:\"fas fa-4x fa-spinner fa-spin\"})});}};const updateLocalStorageOnVote=(id,votes,jokeNum)=>{const jokeData=localStorage.getItem(\"\".concat(jokeNum));if(jokeData){localStorage.setItem(\"\".concat(jokeNum),JSON.stringify({id:id,votes:votes}));}else{const jokeObj={id:id,votes:votes};localStorage.setItem(\"\".concat(jokeNum),JSON.stringify(jokeObj));}};const updateVotingLeaderboard=(id,votes,jokeNum)=>{updateLocalStorageOnVote(id,votes,jokeNum);const filteredStorage=[];let values=Object.values(localStorage);for(let v of values){if(v!=='INFO'){filteredStorage.push(JSON.parse(v));}}const sortedStorage=filteredStorage.sort((a,b)=>b.votes-a.votes);console.log(sortedStorage,'sortedStorage');console.log(jokes,\"jokes\");// jokes.filter((j) => {\n//   if(s.id === j.id){\n//     return [jokes[i], ...jokes]\n//   }\n// })\n// const orderJokes = sortedStorage.forEach((s) => {\n//     for(let i = 0; i < jokes.length; i++){\n//       if(s.id === jokes[i].id){\n//         setJokes(jokes.filter((j) => j !== jokes[i]));\n//         console.log(jokes, 'THIS JOKES')\n//         return [jokes[i], ...jokes]\n//       }\n//     }\n//   })\n//   setJokes(orderJokes);\n//   console.log(orderJokes, 'orderJokes')\n};// return orderJokes; \nlet jokeNum=0;return/*#__PURE__*/_jsxs(\"div\",{className:\"JokeList\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"JokeList-getmore\",onClick:()=>generateNewJokes(),children:\"Get New Jokes\"}),/*#__PURE__*/_jsx(\"div\",{children:showLoadingSpinner()}),jokes.map(j=>{return/*#__PURE__*/_jsx(Joke,{text:j.joke,id:j.id,updateVotingLeaderboard:updateVotingLeaderboard,jokeNum:++jokeNum},j.id);})]});};export default JokeList;","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsx","_jsx","jsxs","_jsxs","JokeList","_ref","numJokesToGet","jokes","setJokes","isLoading","setIsLoading","generateNewJokes","localStorage","clear","getJokes","seenJokes","Set","length","res","get","headers","Accept","joke","data","has","id","add","push","console","log","err","error","showLoadingSpinner","className","children","updateLocalStorageOnVote","votes","jokeNum","jokeData","getItem","concat","setItem","JSON","stringify","jokeObj","updateVotingLeaderboard","filteredStorage","values","Object","v","parse","sortedStorage","sort","a","b","onClick","map","j","text"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nconst JokeList = ({numJokesToGet = 5}) => {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [voteLeaderboard, setVoteLeaderboard] = useState([]);\n\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n  }\n\n  useEffect(() => {\n    const getJokes = async() => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { ...joke } = res.data;\n  \n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({ ...joke });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n\n        setIsLoading(false);\n\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getJokes();\n  }, [generateNewJokes])\n\n  const showLoadingSpinner = () => {\n    if(isLoading === true){\n      return (\n        <div className=\"loading\">\n         <i className=\"fas fa-4x fa-spinner fa-spin\" />\n       </div>\n      )\n    }\n  }\n\n  const updateLocalStorageOnVote = (id, votes, jokeNum) => {\n    const jokeData = localStorage.getItem(`${jokeNum}`);\n    if(jokeData){\n      localStorage.setItem(`${jokeNum}`, JSON.stringify({id: id, votes: votes}));\n    } else {\n      const jokeObj = {id: id, votes: votes}\n      localStorage.setItem(`${jokeNum}`, JSON.stringify(jokeObj));\n    }\n  }\n\n  const updateVotingLeaderboard = (id, votes, jokeNum) => {\n    updateLocalStorageOnVote(id, votes, jokeNum);\n    const filteredStorage = [];\n    let values = Object.values(localStorage);\n    for(let v of values){\n      if(v !== 'INFO'){\n        filteredStorage.push(JSON.parse(v));\n      }\n    }\n    const sortedStorage = filteredStorage.sort((a, b) => b.votes - a.votes);\n    console.log(sortedStorage, 'sortedStorage')\n\n    console.log(jokes, \"jokes\")\n\n    // jokes.filter((j) => {\n    //   if(s.id === j.id){\n    //     return [jokes[i], ...jokes]\n    //   }\n    // })\n\n    // const orderJokes = sortedStorage.forEach((s) => {\n    //     for(let i = 0; i < jokes.length; i++){\n    //       if(s.id === jokes[i].id){\n    //         setJokes(jokes.filter((j) => j !== jokes[i]));\n    //         console.log(jokes, 'THIS JOKES')\n            \n    //         return [jokes[i], ...jokes]\n    //       }\n    //     }\n    //   })\n    //   setJokes(orderJokes);\n    //   console.log(orderJokes, 'orderJokes')\n    };\n \n    // return orderJokes; \n\n  let jokeNum = 0; \n\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={() => generateNewJokes()}\n        >\n          Get New Jokes\n        </button>\n        <div>\n          {showLoadingSpinner()}\n        </div>\n\n        {jokes.map((j) => {\n          return (\n              <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            updateVotingLeaderboard={updateVotingLeaderboard}\n            jokeNum = {++jokeNum}\n          />\n          )\n        })}\n        \n      </div>\n    )\n}\n\nexport default JokeList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}