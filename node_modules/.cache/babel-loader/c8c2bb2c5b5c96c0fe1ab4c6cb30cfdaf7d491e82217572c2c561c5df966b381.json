{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeList = ({\n  numJokesToGet = 5\n}) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [voteLeaderboard, setVoteLeaderboard] = useState([]);\n\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n  };\n  useEffect(() => {\n    const getJokes = async () => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...joke\n          } = res.data;\n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({\n              ...joke\n            });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getJokes();\n  }, [generateNewJokes]);\n  const showLoadingSpinner = () => {\n    if (isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-4x fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  const updateLocalStorageOnVote = (id, votes, jokeNum) => {\n    const jokeData = localStorage.getItem(`${jokeNum}`);\n    if (jokeData) {\n      localStorage.setItem(`${jokeNum}`, JSON.stringify({\n        id: id,\n        votes: votes\n      }));\n    } else {\n      const jokeObj = {\n        id: id,\n        votes: votes\n      };\n      localStorage.setItem(`${jokeNum}`, JSON.stringify(jokeObj));\n    }\n  };\n  const updateVotingLeaderboard = (id, votes, jokeNum) => {\n    updateLocalStorageOnVote(id, votes, jokeNum);\n    const filteredStorage = [];\n    let values = Object.values(localStorage);\n    for (let v of values) {\n      if (v !== 'INFO') {\n        filteredStorage.push(JSON.parse(v));\n      }\n    }\n    const sortedStorage = filteredStorage.sort((a, b) => b.votes - a.votes);\n    console.log(sortedStorage, 'sortedStorage');\n    console.log(jokes, \"jokes\");\n    const orderJokes = jokes.map(j => {\n      console.log(j.id, 'j');\n      for (let i = 0; i <= sortedStorage.length; i++) {\n        console.log(sortedStorage[i], 'sortedStorage[i]');\n        if (j.id === i.id) {\n          return j;\n        }\n      }\n    });\n    console.log(orderJokes, 'orderJokes');\n  };\n\n  // return orderJokes; \n\n  let jokeNum = 0;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: () => generateNewJokes(),\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showLoadingSpinner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this), jokes.map(j => {\n      return /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        updateVotingLeaderboard: updateVotingLeaderboard,\n        jokeNum: ++jokeNum\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 15\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 7\n  }, this);\n};\n_s(JokeList, \"+iu6xHPOscTV/FNdMPqy/q1M2A4=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","generateNewJokes","localStorage","clear","getJokes","seenJokes","Set","length","res","get","headers","Accept","joke","data","has","id","add","push","console","log","err","error","showLoadingSpinner","className","children","fileName","_jsxFileName","lineNumber","columnNumber","updateLocalStorageOnVote","votes","jokeNum","jokeData","getItem","setItem","JSON","stringify","jokeObj","updateVotingLeaderboard","filteredStorage","values","Object","v","parse","sortedStorage","sort","a","b","orderJokes","map","j","i","onClick","text","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nconst JokeList = ({numJokesToGet = 5}) => {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  // const [voteLeaderboard, setVoteLeaderboard] = useState([]);\n\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n  }\n\n  useEffect(() => {\n    const getJokes = async() => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { ...joke } = res.data;\n  \n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({ ...joke });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n\n        setIsLoading(false);\n\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getJokes();\n  }, [generateNewJokes])\n\n  const showLoadingSpinner = () => {\n    if(isLoading === true){\n      return (\n        <div className=\"loading\">\n         <i className=\"fas fa-4x fa-spinner fa-spin\" />\n       </div>\n      )\n    }\n  }\n\n  const updateLocalStorageOnVote = (id, votes, jokeNum) => {\n    const jokeData = localStorage.getItem(`${jokeNum}`);\n    if(jokeData){\n      localStorage.setItem(`${jokeNum}`, JSON.stringify({id: id, votes: votes}));\n    } else {\n      const jokeObj = {id: id, votes: votes}\n      localStorage.setItem(`${jokeNum}`, JSON.stringify(jokeObj));\n    }\n  }\n\n  const updateVotingLeaderboard = (id, votes, jokeNum) => {\n    updateLocalStorageOnVote(id, votes, jokeNum);\n    const filteredStorage = [];\n    let values = Object.values(localStorage);\n    for(let v of values){\n      if(v !== 'INFO'){\n        filteredStorage.push(JSON.parse(v));\n      }\n    }\n    const sortedStorage = filteredStorage.sort((a, b) => b.votes - a.votes);\n    console.log(sortedStorage, 'sortedStorage')\n\n    console.log(jokes, \"jokes\")\n    const orderJokes = jokes.map((j) => {\n      console.log(j.id, 'j')\n        for(let i = 0; i <= sortedStorage.length; i++){\n          console.log(sortedStorage[i], 'sortedStorage[i]')\n          if(j.id === i.id){\n            return j;\n          }\n        }\n      })\n      console.log(orderJokes, 'orderJokes')\n    };\n \n    // return orderJokes; \n\n  let jokeNum = 0; \n\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={() => generateNewJokes()}\n        >\n          Get New Jokes\n        </button>\n        <div>\n          {showLoadingSpinner()}\n        </div>\n\n        {jokes.map((j) => {\n          return (\n              <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            updateVotingLeaderboard={updateVotingLeaderboard}\n            jokeNum = {++jokeNum}\n          />\n          )\n        })}\n        \n      </div>\n    )\n}\n\nexport default JokeList;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAO,gBAAgB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAExB,MAAMC,QAAQ,GAAGA,CAAC;EAACC,aAAa,GAAG;AAAC,CAAC,KAAK;EAAAC,EAAA;EACxC,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACW,SAAS,EAAEC,YAAY,CAAC,GAAGZ,QAAQ,CAAC,IAAI,CAAC;EAChD;;EAEA,MAAMa,gBAAgB,GAAGA,CAAA,KAAM;IAC7BH,QAAQ,CAAC,EAAE,CAAC;IACZE,YAAY,CAAC,IAAI,CAAC;IAClBE,YAAY,CAACC,KAAK,CAAC,CAAC;EACtB,CAAC;EAEDd,SAAS,CAAC,MAAM;IACd,MAAMe,QAAQ,GAAG,MAAAA,CAAA,KAAW;MAC1B,IAAI;QACF,IAAIC,SAAS,GAAG,IAAIC,GAAG,CAAC,CAAC;QACzB,OAAOT,KAAK,CAACU,MAAM,GAAGZ,aAAa,EAAE;UACnC,IAAIa,GAAG,GAAG,MAAMlB,KAAK,CAACmB,GAAG,CAAC,4BAA4B,EAAE;YACtDC,OAAO,EAAE;cAAEC,MAAM,EAAE;YAAmB;UACxC,CAAC,CAAC;UACF,IAAI;YAAE,GAAGC;UAAK,CAAC,GAAGJ,GAAG,CAACK,IAAI;UAE1B,IAAI,CAACR,SAAS,CAACS,GAAG,CAACF,IAAI,CAACG,EAAE,CAAC,EAAE;YAC3BV,SAAS,CAACW,GAAG,CAACJ,IAAI,CAACG,EAAE,CAAC;YACtBlB,KAAK,CAACoB,IAAI,CAAC;cAAE,GAAGL;YAAK,CAAC,CAAC;UACzB,CAAC,MAAM;YACLM,OAAO,CAACC,GAAG,CAAC,kBAAkB,CAAC;UACjC;QACF;QAEAnB,YAAY,CAAC,KAAK,CAAC;MAErB,CAAC,CAAC,OAAOoB,GAAG,EAAE;QACZF,OAAO,CAACG,KAAK,CAACD,GAAG,CAAC;MACpB;IACF,CAAC;IAEDhB,QAAQ,CAAC,CAAC;EACZ,CAAC,EAAE,CAACH,gBAAgB,CAAC,CAAC;EAEtB,MAAMqB,kBAAkB,GAAGA,CAAA,KAAM;IAC/B,IAAGvB,SAAS,KAAK,IAAI,EAAC;MACpB,oBACEN,OAAA;QAAK8B,SAAS,EAAC,SAAS;QAAAC,QAAA,eACvB/B,OAAA;UAAG8B,SAAS,EAAC;QAA8B;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC3C,CAAC;IAET;EACF,CAAC;EAED,MAAMC,wBAAwB,GAAGA,CAACd,EAAE,EAAEe,KAAK,EAAEC,OAAO,KAAK;IACvD,MAAMC,QAAQ,GAAG9B,YAAY,CAAC+B,OAAO,CAAC,GAAGF,OAAO,EAAE,CAAC;IACnD,IAAGC,QAAQ,EAAC;MACV9B,YAAY,CAACgC,OAAO,CAAC,GAAGH,OAAO,EAAE,EAAEI,IAAI,CAACC,SAAS,CAAC;QAACrB,EAAE,EAAEA,EAAE;QAAEe,KAAK,EAAEA;MAAK,CAAC,CAAC,CAAC;IAC5E,CAAC,MAAM;MACL,MAAMO,OAAO,GAAG;QAACtB,EAAE,EAAEA,EAAE;QAAEe,KAAK,EAAEA;MAAK,CAAC;MACtC5B,YAAY,CAACgC,OAAO,CAAC,GAAGH,OAAO,EAAE,EAAEI,IAAI,CAACC,SAAS,CAACC,OAAO,CAAC,CAAC;IAC7D;EACF,CAAC;EAED,MAAMC,uBAAuB,GAAGA,CAACvB,EAAE,EAAEe,KAAK,EAAEC,OAAO,KAAK;IACtDF,wBAAwB,CAACd,EAAE,EAAEe,KAAK,EAAEC,OAAO,CAAC;IAC5C,MAAMQ,eAAe,GAAG,EAAE;IAC1B,IAAIC,MAAM,GAAGC,MAAM,CAACD,MAAM,CAACtC,YAAY,CAAC;IACxC,KAAI,IAAIwC,CAAC,IAAIF,MAAM,EAAC;MAClB,IAAGE,CAAC,KAAK,MAAM,EAAC;QACdH,eAAe,CAACtB,IAAI,CAACkB,IAAI,CAACQ,KAAK,CAACD,CAAC,CAAC,CAAC;MACrC;IACF;IACA,MAAME,aAAa,GAAGL,eAAe,CAACM,IAAI,CAAC,CAACC,CAAC,EAAEC,CAAC,KAAKA,CAAC,CAACjB,KAAK,GAAGgB,CAAC,CAAChB,KAAK,CAAC;IACvEZ,OAAO,CAACC,GAAG,CAACyB,aAAa,EAAE,eAAe,CAAC;IAE3C1B,OAAO,CAACC,GAAG,CAACtB,KAAK,EAAE,OAAO,CAAC;IAC3B,MAAMmD,UAAU,GAAGnD,KAAK,CAACoD,GAAG,CAAEC,CAAC,IAAK;MAClChC,OAAO,CAACC,GAAG,CAAC+B,CAAC,CAACnC,EAAE,EAAE,GAAG,CAAC;MACpB,KAAI,IAAIoC,CAAC,GAAG,CAAC,EAAEA,CAAC,IAAIP,aAAa,CAACrC,MAAM,EAAE4C,CAAC,EAAE,EAAC;QAC5CjC,OAAO,CAACC,GAAG,CAACyB,aAAa,CAACO,CAAC,CAAC,EAAE,kBAAkB,CAAC;QACjD,IAAGD,CAAC,CAACnC,EAAE,KAAKoC,CAAC,CAACpC,EAAE,EAAC;UACf,OAAOmC,CAAC;QACV;MACF;IACF,CAAC,CAAC;IACFhC,OAAO,CAACC,GAAG,CAAC6B,UAAU,EAAE,YAAY,CAAC;EACvC,CAAC;;EAED;;EAEF,IAAIjB,OAAO,GAAG,CAAC;EAEb,oBACEtC,OAAA;IAAK8B,SAAS,EAAC,UAAU;IAAAC,QAAA,gBACvB/B,OAAA;MACE8B,SAAS,EAAC,kBAAkB;MAC5B6B,OAAO,EAAEA,CAAA,KAAMnD,gBAAgB,CAAC,CAAE;MAAAuB,QAAA,EACnC;IAED;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACTnC,OAAA;MAAA+B,QAAA,EACGF,kBAAkB,CAAC;IAAC;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAClB,CAAC,EAEL/B,KAAK,CAACoD,GAAG,CAAEC,CAAC,IAAK;MAChB,oBACIzD,OAAA,CAACF,IAAI;QACP8D,IAAI,EAAEH,CAAC,CAACtC,IAAK;QAEbG,EAAE,EAAEmC,CAAC,CAACnC,EAAG;QACTuB,uBAAuB,EAAEA,uBAAwB;QACjDP,OAAO,EAAI,EAAEA;MAAQ,GAHhBmB,CAAC,CAACnC,EAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAIV,CAAC;IAEJ,CAAC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEC,CAAC;AAEZ,CAAC;AAAAhC,EAAA,CAlHKF,QAAQ;AAAA4D,EAAA,GAAR5D,QAAQ;AAoHd,eAAeA,QAAQ;AAAC,IAAA4D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}