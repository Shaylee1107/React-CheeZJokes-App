{"ast":null,"code":"var _jsxFileName = \"/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst JokeList = ({\n  numJokesToGet = 5\n}) => {\n  _s();\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [changeJokeOrder, setChangeJokeOrder] = useState(false);\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n  };\n  const displayJokesOnUI = () => {\n    return jokes.map(j => {\n      localStorage.setItem(`${j.id}`, `{id: ${j.id}, votes: 0, text: ${j.joke}, key: ${j.id}}`);\n      return /*#__PURE__*/_jsxDEV(Joke, {\n        text: j.joke,\n        id: j.id,\n        updateLocalStorageOnVote: updateLocalStorageOnVote\n      }, j.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, this);\n    });\n  };\n  useEffect(() => {\n    const getJokes = async () => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: {\n              Accept: \"application/json\"\n            }\n          });\n          let {\n            ...joke\n          } = res.data;\n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({\n              ...joke\n            });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    };\n    getJokes();\n  }, [generateNewJokes]);\n  const updateLocalStorageOnVote = (id, votes, text, key) => {\n    localStorage.setItem(`${id}`, `{id: ${id}, votes: ${votes}, text: ${text}, key: ${key}`);\n  };\n\n  // const updateVotingLeaderboard = (id, votes, jokeNum) => {\n  //   updateLocalStorageOnVote(id, votes, jokeNum);\n  //   const filteredStorage = [];\n  //   let values = Object.values(localStorage);\n  //   for(let v of values){\n  //     if(v !== 'INFO'){\n  //       filteredStorage.push(JSON.parse(v));\n  //     }\n  //   }\n  //   const sortedStorage = filteredStorage.sort((a, b) => b.votes - a.votes);\n  //   console.log(sortedStorage, 'sortedStorage')\n\n  // jokes.filter((j) => {\n  //   if(s.id === j.id){\n  //     return [jokes[i], ...jokes]\n  //   }\n  // })\n\n  // const orderJokes = sortedStorage.forEach((s) => {\n  //     for(let i = 0; i < jokes.length; i++){\n  //       if(s.id === jokes[i].id){\n  //         setJokes(jokes.filter((j) => j !== jokes[i]));\n  //         console.log(jokes, 'THIS JOKES')\n\n  //         return [jokes[i], ...jokes]\n  //       }\n  //     }\n  //   })\n  //   setJokes(orderJokes);\n  //   console.log(orderJokes, 'orderJokes')\n  // };\n\n  // useEffect(() => {\n  //   const changeJokeOrder = () => {\n  //     console.log(jokes, 'jokes in useeffect')\n  //   }\n\n  //   changeJokeOrder();\n  // }, [updateVotingLeaderboard])\n\n  const showLoadingSpinner = () => {\n    if (isLoading === true) {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loading\",\n        children: /*#__PURE__*/_jsxDEV(\"i\", {\n          className: \"fas fa-4x fa-spinner fa-spin\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 10\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"JokeList\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"JokeList-getmore\",\n      onClick: () => generateNewJokes(),\n      children: \"Get New Jokes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: showLoadingSpinner()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 9\n    }, this), displayJokesOnUI()]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 115,\n    columnNumber: 7\n  }, this);\n};\n_s(JokeList, \"CiZzMqCMr1gBUr34+pn8Hbz/oos=\");\n_c = JokeList;\nexport default JokeList;\nvar _c;\n$RefreshReg$(_c, \"JokeList\");","map":{"version":3,"names":["React","useState","useEffect","axios","Joke","jsxDEV","_jsxDEV","JokeList","numJokesToGet","_s","jokes","setJokes","isLoading","setIsLoading","changeJokeOrder","setChangeJokeOrder","generateNewJokes","localStorage","clear","displayJokesOnUI","map","j","setItem","id","joke","text","updateLocalStorageOnVote","fileName","_jsxFileName","lineNumber","columnNumber","getJokes","seenJokes","Set","length","res","get","headers","Accept","data","has","add","push","console","log","err","error","votes","key","showLoadingSpinner","className","children","onClick","_c","$RefreshReg$"],"sources":["/Users/owner/Documents/SPRINGBOARD/Projects/react-jokes-classes/src/JokeList.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport Joke from \"./Joke\";\nimport \"./JokeList.css\";\n\nconst JokeList = ({numJokesToGet = 5}) => {\n  const [jokes, setJokes] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [changeJokeOrder, setChangeJokeOrder] = useState(false);\n\n  const generateNewJokes = () => {\n    setJokes([]);\n    setIsLoading(true);\n    localStorage.clear();\n  }\n\n  const displayJokesOnUI = () => {\n      return (\n          jokes.map((j) => {\n            localStorage.setItem(`${j.id}`, `{id: ${j.id}, votes: 0, text: ${j.joke}, key: ${j.id}}`);\n          return (\n              <Joke\n            text={j.joke}\n            key={j.id}\n            id={j.id}\n            updateLocalStorageOnVote={updateLocalStorageOnVote}\n          />\n          )})\n        )\n  }\n\n  useEffect(() => {\n    const getJokes = async() => {\n      try {\n        let seenJokes = new Set();\n        while (jokes.length < numJokesToGet) {\n          let res = await axios.get(\"https://icanhazdadjoke.com\", {\n            headers: { Accept: \"application/json\" }\n          });\n          let { ...joke } = res.data;\n  \n          if (!seenJokes.has(joke.id)) {\n            seenJokes.add(joke.id);\n            jokes.push({ ...joke });\n          } else {\n            console.log(\"duplicate found!\");\n          }\n        }\n        setIsLoading(false);\n      } catch (err) {\n        console.error(err);\n      }\n    }\n\n    getJokes();\n  }, [generateNewJokes])\n\n  const updateLocalStorageOnVote = (id, votes, text, key) => {\n      localStorage.setItem(`${id}`, `{id: ${id}, votes: ${votes}, text: ${text}, key: ${key}`);\n  }\n\n  // const updateVotingLeaderboard = (id, votes, jokeNum) => {\n  //   updateLocalStorageOnVote(id, votes, jokeNum);\n  //   const filteredStorage = [];\n  //   let values = Object.values(localStorage);\n  //   for(let v of values){\n  //     if(v !== 'INFO'){\n  //       filteredStorage.push(JSON.parse(v));\n  //     }\n  //   }\n  //   const sortedStorage = filteredStorage.sort((a, b) => b.votes - a.votes);\n  //   console.log(sortedStorage, 'sortedStorage')\n\n \n\n    // jokes.filter((j) => {\n    //   if(s.id === j.id){\n    //     return [jokes[i], ...jokes]\n    //   }\n    // })\n\n    // const orderJokes = sortedStorage.forEach((s) => {\n    //     for(let i = 0; i < jokes.length; i++){\n    //       if(s.id === jokes[i].id){\n    //         setJokes(jokes.filter((j) => j !== jokes[i]));\n    //         console.log(jokes, 'THIS JOKES')\n            \n    //         return [jokes[i], ...jokes]\n    //       }\n    //     }\n    //   })\n    //   setJokes(orderJokes);\n    //   console.log(orderJokes, 'orderJokes')\n    // };\n\n  // useEffect(() => {\n  //   const changeJokeOrder = () => {\n  //     console.log(jokes, 'jokes in useeffect')\n  //   }\n\n  //   changeJokeOrder();\n  // }, [updateVotingLeaderboard])\n\n  const showLoadingSpinner = () => {\n    if(isLoading === true){\n      return (\n        <div className=\"loading\">\n         <i className=\"fas fa-4x fa-spinner fa-spin\" />\n       </div>\n      )\n    }\n  }\n\n    return (\n      <div className=\"JokeList\">\n        <button\n          className=\"JokeList-getmore\"\n          onClick={() => generateNewJokes()}\n        >\n          Get New Jokes\n        </button>\n        <div>\n          {showLoadingSpinner()}\n        </div>\n\n        {displayJokesOnUI()}\n        \n      </div>\n    )\n}\n\nexport default JokeList;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}